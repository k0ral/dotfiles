# Locales {{{
export LANG=en_US.utf8
export LANGUAGE=en_US.utf8
export LC_ADDRESS=en_US.utf8
export LC_ALL=en_US.utf8
export LC_COLLATE=en_US.utf8
export LC_IDENTIFICATION=en_US.utf8
export LC_MESSAGES=en_US.utf8
export LC_MEASUREMENT=en_US.utf8
export LC_MONETARY=en_US.utf8
export LC_NAME=en_US.utf8
export LC_NUMERIC=en_US.utf8
export LC_PAPER=en_US.utf8
export LC_TELEPHONE=en_US.utf8
export LC_TIME=en_US.utf8
export LC_TYPE=en_US.utf8

#unicode_start
# }}}

# {{{ Default applications
export BROWSER="/usr/bin/uzbl-browser"
export CC="/usr/bin/colorgcc"
export EDITOR="/usr/bin/vim"
export PAGER="/usr/bin/vimpager"
export READNULLCMD=${PAGER:-/usr/bin/pager}
export TERM="rxvt-unicode"
#export XTERM="urxvt"
# }}}

# Misc constants {{{
export COLORTERM="yes"
export GREP_COLOR=31
export MAIL=${HOME}/mail
export MAILCHECK=1
export PATH=/usr/share/perl5/vendor_perl/auto/share/dist/Cope:/usr/lib/ccache/bin/:/usr/lib/colorgcc/bin:${PATH}
export http_proxy="http://localhost:8118"
export HTTP_PROXY=$http_proxy
export _JAVA_OPTIONS='-Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel' 
export JAVA_FONTS=/usr/share/fonts/TTF
export GDK_USE_XFT=1    #   For old gtk applications
export QT_XFT=true      #   For old qt applicatios
# }}}

eval `dircolors -b`

# Keybindings {{{
if [[ "$TERM" != emacs ]]; then
[[ -z "$terminfo[kdch1]" ]] || bindkey -M emacs "$terminfo[kdch1]" delete-char
[[ -z "$terminfo[khome]" ]] || bindkey -M emacs "$terminfo[khome]" beginning-of-line
[[ -z "$terminfo[kend]" ]] || bindkey -M emacs "$terminfo[kend]" end-of-line
[[ -z "$terminfo[kich1]" ]] || bindkey -M emacs "$terminfo[kich1]" overwrite-mode
[[ -z "$terminfo[kdch1]" ]] || bindkey -M vicmd "$terminfo[kdch1]" vi-delete-char
[[ -z "$terminfo[khome]" ]] || bindkey -M vicmd "$terminfo[khome]" vi-beginning-of-line
[[ -z "$terminfo[kend]" ]] || bindkey -M vicmd "$terminfo[kend]" vi-end-of-line
[[ -z "$terminfo[kich1]" ]] || bindkey -M vicmd "$terminfo[kich1]" overwrite-mode

[[ -z "$terminfo[cuu1]" ]] || bindkey -M viins "$terminfo[cuu1]" vi-up-line-or-history
[[ -z "$terminfo[cuf1]" ]] || bindkey -M viins "$terminfo[cuf1]" vi-forward-char
[[ -z "$terminfo[kcuu1]" ]] || bindkey -M viins "$terminfo[kcuu1]" vi-up-line-or-history
[[ -z "$terminfo[kcud1]" ]] || bindkey -M viins "$terminfo[kcud1]" vi-down-line-or-history
[[ -z "$terminfo[kcuf1]" ]] || bindkey -M viins "$terminfo[kcuf1]" vi-forward-char
[[ -z "$terminfo[kcub1]" ]] || bindkey -M viins "$terminfo[kcub1]" vi-backward-char

# ncurses fogyatekos
[[ "$terminfo[kcuu1]" == "O"* ]] && bindkey -M viins "${terminfo[kcuu1]/O/[}" vi-up-line-or-history
[[ "$terminfo[kcud1]" == "O"* ]] && bindkey -M viins "${terminfo[kcud1]/O/[}" vi-down-line-or-history
[[ "$terminfo[kcuf1]" == "O"* ]] && bindkey -M viins "${terminfo[kcuf1]/O/[}" vi-forward-char
[[ "$terminfo[kcub1]" == "O"* ]] && bindkey -M viins "${terminfo[kcub1]/O/[}" vi-backward-char
[[ "$terminfo[khome]" == "O"* ]] && bindkey -M viins "${terminfo[khome]/O/[}" beginning-of-line
[[ "$terminfo[kend]" == "O"* ]] && bindkey -M viins "${terminfo[kend]/O/[}" end-of-line
[[ "$terminfo[khome]" == "O"* ]] && bindkey -M emacs "${terminfo[khome]/O/[}" beginning-of-line
[[ "$terminfo[kend]" == "O"* ]] && bindkey -M emacs "${terminfo[kend]/O/[}" end-of-line
fi

bindkey -e

bindkey "\e[1~" beginning-of-line # Home
bindkey "\e[4~" end-of-line # End
bindkey "\e[5~" beginning-of-history # PageUp
bindkey "\e[6~" end-of-history # PageDown
bindkey "\e[2~" quoted-insert # Ins
bindkey "\e[3~" delete-char # Del
bindkey "\e[5C" forward-word
bindkey "\eOc" emacs-forward-word
bindkey "\e[5D" backward-word
bindkey "\eOd" emacs-backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
# for rxvt
bindkey "\e[7~" beginning-of-line # Home
bindkey "\e[8~" end-of-line # End
# for non RH/Debian xterm, can't hurt for RH/Debian xterm
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
# for freebsd console
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line

bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward
# }}}

# Completion {{{
setopt complete_in_word
setopt always_to_end

autoload -U compinit; compinit
zmodload -i zsh/complist

zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no result for : %d%b'
zstyle ':completion:*' menu select=2
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s

# Remove trailing slashes
zstyle ':completion:*' squeeze-slashes true

# Use cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.config/zsh/cache

# Prevent CVS files/directories from being completed
zstyle ':completion:*:(all-|)files' ignored-patterns '(|*/)CVS'
zstyle ':completion:*:cd:*' ignored-patterns '(*/)#CVS'

# Allow mistakes
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
#zstyle ':completion:*:approximate:*' max-errors 1 numeric
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# [?] Ignore completion functions for commands you donâ€™t have
zstyle ':completion:*:functions' ignored-patterns '_*'

# Colors
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Do not show already selected elements
zstyle ':completion:*:rm:*' ignore-line yes
zstyle ':completion:*:mv:*' ignore-line yes
zstyle ':completion:*:cp:*' ignore-line yes

# Sudo completion
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# PID completion
zstyle ':completion:*:*:kill:*:processes'   list-colors "=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01"
zstyle ':completion:*:*:kill:*'             menu yes select
zstyle ':completion:*:kill:*'               force-list always
zstyle ':completion:*:*:killall:*'          menu yes select
zstyle ':completion:*:killall:*'            force-list always
#zstyle ':completion:*:processes'            command "ps -au$USER"
zstyle ':completion:*:*:*:*:processes' command "ps -u `whoami` -o pid,user,comm -w -w"

# Don't select parent directory on cd
#zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories

# xdvi completion
zstyle ':completion:*:*:xdvi:*' menu yes select
zstyle ':completion:*:*:xdvi:*' file-sort time

# hosts completion
[ -r ~/.ssh/known_hosts ] && _ssh_hosts=(${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[\|]*}%%\ *}%%,*}) || _ssh_hosts=()
hosts=(
  "$_ssh_hosts[@]"
  `hostname`
  localhost
)
zstyle ':completion:*:hosts' hosts $hosts

# Users completion : don't complete uninteresting users, unless we really want to
zstyle ':completion:*:*:*:users' ignored-patterns adm amanda apache aurbuild avahi beaglidx bin cacti canna clamav courier cron daemon dbus distcache dovecot fax fetchmail ftp games gdm gkrellmd gopher hacluster hal halt hsqldb http ident junkbust ldap lp mail mailman mailnull mldonkey mpd mysql nagios named netdump news nfsnobody nobody nscd ntp nut nx openvpn operator pcap polipo postfix postgres privoxy pulse pvm quagga radvd rpc rpcuser rpm rtkit shutdown squid sshd sync usbmux uucp vcsa xfs
zstyle '*' single-ignored show

# Support for bash completion
autoload -U bashcompinit; bashcompinit
# }}}

# Prompts {{{
# Preconfigured prompts
#autoload -U promptinit
#promptinit
#prompt adam2

BLACK="%{"$'\033[01;30m'"%}"
RED="%{"$'\033[01;31m'"%}"
GREEN="%{"$'\033[01;32m'"%}"
YELLOW="%{"$'\033[01;33m'"%}"
BLUE="%{"$'\033[01;34m'"%}"
MAGENTA="%{"$'\033[01;35m'"%}"
CYAN="%{"$'\033[01;36m'"%}"
BOLD="%{"$'\033[01;39m'"%}"
NORM="%{"$'\033[00m'"%}"

export PROMPT="${RED}%n${NORM}@${BLUE}%m${NORM}:${YELLOW}%~${NORM} %#>"
export RPROMPT='[%T]'
# }}}

# Aliases {{{
#alias cp='gcp'
alias df='df -hT'
#alias df="cdf -h"
#alias du='du -chs'
alias diff="colordiff"
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias gcc="colorgcc"
#alias grep='grep --color=auto'
alias -g grep='ack'
alias la='ls -a'
alias ll='ls -l'
alias lla='ls -la'
alias ls='ls --tabsize=0 --literal --color=auto --show-control-chars --human-readable --group-directories-first -X'
alias mkdir='mkdir -p -v'
alias more='less'
alias mv='mv -v'
alias o='xdg-open'
alias rm='safe-rm'
#alias startx='startx & vlock'
alias top="htop"
alias my_indent='indent -bad -bap -bbo -bc -nbfda -br -brs -cbi0 -cdb -cdw -ce -ncs -di4 -fca -hnl -i4 -ip4 -l120 -lp -nlps -npcs -nprs -npsl -saf -sai -saw -sbi4 -sc -nsob -ss -ts4 -nut '
#alias make="colormake"
alias octave="octave -q"
alias gdb="cgdb -q"
alias _="sudo"
alias http-on="sudo /etc/rc.d/lighttpd start"
alias http-off="sudo /etc/rc.d/lighttpd stop"
alias mysql-on="sudo /etc/rc.d/mysqld start"
alias mysql-off="sudo /etc/rc.d/mysqld stop"
alias bluetooth-on="sudo /etc/rc.d/bluetooth start"
alias bluetooth-off="sudo /etc/rc.d/bluetooth stop"
alias mpd-on="sudo /etc/rc.d/mpd start"
alias mpd-off="sudo /etc/rc.d/mpd stop"
alias wifi-on="sudo /etc/rc.d/net-auto-wireless start"
alias wifi-off="sudo /etc/rc.d/net-auto-wireless stop"
alias cups-on="sudo /etc/rc.d/cups start"
alias cups-off="sudo /etc/rc.d/cups stop"
alias openports='sudo netstat --all --numeric --programs --inet'
alias wifiselect='sudo wifi-select wlan0'
alias uzbl='uzbl-browser'
alias mutt='mutt -y'
alias pingg='ping www.google.fr'
alias suvim='sudo vim'
alias volume='alsamixer -c 0'
alias wtf='dmesg'
alias rtfm='man'

if [ $UID -ne 0 ]; then
    alias reboot='sudo reboot'
    alias halt='sudo halt'
    alias upgrade='sudo clyde -Syu && sudo diffpac'
    alias remove='sudo clyde -R'
    alias netcfg='sudo netcfg2'
fi

# File extension => application
alias -s tex=vim
alias -s pdf=epdfview
alias -s html=uzbl-browser

# Aliases for directories
# Example: hash -d down=~/Desktop/Downloads
# }}}

# Helpers {{{
lsmount() { (echo "DEVICE PATH TYPE FLAGS" && mount | awk '$2=$4="";1') | column -t; }
wiki() { dig +short txt $1.wp.dg.cx; }

function maketex() {
    if [ "$1" == "" ]; then
        FILE="paper";
    else
        FILE=`echo $1 | sed -e 's/..*//'`;
    fi
    if [ -f $FILE.tex ]; then
        pdflatex $FILE.tex;
        bibtex $FILE.aux;
        makeindex $FILE;
        pdflatex $FILE.tex;
        bibtex $FILE.aux;
        makeindex $FILE;
        #latex $FILE.tex && dvipdf $FILE.dvi;
        #latex $FILE.tex && dvips -Ppdf -G0 $FILE.dvi -o $FILE.ps && ps2pdf14 $FILE.ps;
    fi
}

xdvi() { command xdvi ${*:-*.dvi(om[1])} }
# }}}

# {{{ History
export HISTFILE=$HOME/.config/zsh/history
export HISTORY=1000
export SAVEHIST=1000

setopt append_history           # Shared history for all shells
unsetopt extended_history       # Do not save extra information like timestamp
setopt hist_ignore_dups
setopt hist_ignore_space        # Do not save commands that start with a space
setopt inc_append_history
setopt hist_reduce_blanks
setopt hist_verify              # Using '!', the command isn't immediately executed
setopt share_history
# }}}

# Options {{{
setopt auto_cd  
#setopt correctall              # Correction of writing errors (ex: sl => ls)
setopt auto_pushd pushd_minus pushd_silent pushd_to_home pushd_ignore_dups
setopt cdablevars
#setopt ignoreeof               #   Prevent from using Ctrl + d
setopt interactivecomments
#setopt nobanghist
setopt noclobber
setopt SH_WORD_SPLIT
setopt nohup
setopt chase_links              #   Traite les liens symboliques comme il faut

setopt extendedglob             #   Use regexp in commands (ex : cp ^*.(tar|bz2|gz))

# No beeps at all !
unsetopt beep
unsetopt hist_beep
unsetopt list_beep

# Si on utilise des jokers dans une liste d'arguments, retire les jokers
# qui ne correspondent Ã  rien au lieu de donner une erreur
setopt nullglob

unalias run-help
autoload run-help

# Inline completion
# }}}

# Sleep mode {{{
sleep-on () {
    sudo /etc/rc.d/fcron stop
    sudo /etc/rc.d/wicd stop
}
# }}}

# {{{ Support for ..../ 
rationalise-dot() {
    if [[ $LBUFFER = *.. ]]; then
        LBUFFER+=/..
    else
        LBUFFER+=.
    fi
}

zle -N rationalise-dot
bindkey . rationalise-dot
# }}}

# {{{ List/delete empty folders
ls-empty() {
    find . -type d -empty -print0 | xargs --null ls
}

rm-empty() {
    find . -type d -empty -print0 | xargs --null rmdir
}
# }}}
